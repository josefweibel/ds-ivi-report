
@inproceedings{isaacs_state_2014,
	title = {State of the {Art} of {Performance} {Visualization}},
	abstract = {Performance visualization comprises techniques that aid developers and analysts in improving the time and energy efﬁciency of their software. In this work, we discuss performance as it relates to visualization and survey existing approaches in performance visualization. We present an overview of what types of performance data can be collected and a categorization of the types of goals that performance visualization techniques can address. We develop a taxonomy for the contexts in which different performance visualizations reside and describe the state of the art research pertaining to each. Finally, we discuss unaddressed and future challenges in performance visualization.},
	language = {en},
	booktitle = {{STAR} – {State} of {The} {Art} {Report}},
	author = {Isaacs, Katherine E and Giménez, Alfredo and Jusuﬁ, Ilir and Gamblin, Todd and Bhatele, Abhinav and Schulz, Martin and Hamann, Bernd and Bremer, Peer-Timo},
	year = {2014},
	pages = {20},
	file = {Isaacs et al. - State of the Art of Performance Visualization.pdf:/Users/josefweibel/Zotero/storage/H6QRYC6Y/Isaacs et al. - State of the Art of Performance Visualization.pdf:application/pdf},
}

@misc{alzheimers_disease_neuroimaging_initiative_adni_2022,
	title = {{ADNI}},
	url = {https://adni.loni.usc.edu/},
	urldate = {2022-04-03},
	author = {{Alzheimer's Disease Neuroimaging Initiative}},
	month = apr,
	year = {2022},
	file = {Snapshot:/Users/josefweibel/Zotero/storage/6G94HTHE/adni.loni.usc.edu.html:text/html},
}

@inproceedings{lee_performance_2014,
	title = {Performance testing of web-based data visualization},
	doi = {10.1109/SMC.2014.6974152},
	abstract = {Many scientific applications generate massive data that requires visualization. For example, the Nevada Solar Energy-Water-Environmental Nexus project has been generating a large amount of environmental monitoring data in textual format. As the data is available on the web, a web-based visualization tool is desirable for the project rather than a standalone tool. This research analyzes the processing mechanisms of four popular web-based data visualization tools, that is, Google Charts, Flex, OFC, D3, and compares their performances. A standalone visualization tool, JfreeChart, have been also used for comparison. The processing times have been divided into three segments, layout time, data transformation time, and rendering time, and separately measured. The actual temperature data from the Nevada Nexus project has been used for testing in different scales ranging from 100 to 100,000 data points. The result shows that each visualization tool has its own ideal environment.},
	booktitle = {2014 {IEEE} {International} {Conference} on {Systems}, {Man}, and {Cybernetics} ({SMC})},
	author = {Lee, Sungchul and Jo, Ju-Yeon and Kim, Yoohwan},
	month = oct,
	year = {2014},
	note = {ISSN: 1062-922X},
	keywords = {Browsers, D3.js, Data visualization, Data Visualization, Flex, Flexible printed circuits, Google, Google Charts, JFreeChart, Libraries, Open Flash Chart, Rendering (computer graphics), Sensor Data, Servers},
	pages = {1648--1653},
	file = {IEEE Xplore Abstract Record:/Users/josefweibel/Zotero/storage/ZQXRFY4J/6974152.html:text/html},
}

@misc{google_lighthouse_2021,
	title = {Lighthouse {\textbar} {Tools} for {Web} {Developers}},
	url = {https://developers.google.com/web/tools/lighthouse},
	abstract = {Learn how to set up Lighthouse to audit your web apps.},
	language = {en},
	urldate = {2022-04-03},
	journal = {Google Developers},
	author = {{Google}},
	month = apr,
	year = {2021},
	file = {Snapshot:/Users/josefweibel/Zotero/storage/JHJRFLWU/lighthouse.html:text/html},
}

@misc{noauthor_leaflet_2022,
	title = {Leaflet},
	url = {https://leafletjs.com/},
	abstract = {Leaflet is a modern, lightweight open-source JavaScript library for mobile-friendly interactive maps.},
	urldate = {2022-04-03},
	year = {2022},
	file = {Snapshot:/Users/josefweibel/Zotero/storage/JGAYY9FG/leafletjs.com.html:text/html},
}

@misc{mozilla_webgl_2022,
	title = {{WebGL}},
	shorttitle = {{WebGL}},
	url = {https://developer.mozilla.org/en-US/docs/Web/API/WebGL{\_}API},
	abstract = {WebGL (Web Graphics Library) is a JavaScript API for rendering high-performance interactive 3D and 2D graphics within any compatible web browser without the use of plug-ins. WebGL does so by introducing an API that closely conforms to OpenGL ES 2.0 that can be used in HTML5 {\textless}canvas{\textgreater} elements. This conformance makes it possible for the API to take advantage of hardware graphics acceleration provided by the user's device.},
	language = {en-US},
	urldate = {2022-04-03},
	journal = {mdn web docs},
	author = {{Mozilla}},
	month = mar,
	year = {2022},
	file = {Snapshot:/Users/josefweibel/Zotero/storage/DKDLF85C/WebGL_API.html:text/html},
}
